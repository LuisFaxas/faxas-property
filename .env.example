# Environment Variables Template
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to version control

# ===========================
# Application Settings
# ===========================
NODE_ENV=development
LOG_LEVEL=debug

# ===========================
# Firebase Client Configuration
# ===========================
NEXT_PUBLIC_FIREBASE_API_KEY="your-api-key-here"
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="your-project.firebaseapp.com"
NEXT_PUBLIC_FIREBASE_PROJECT_ID="your-project-id"
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="your-project.firebasestorage.app"
NEXT_PUBLIC_FIREBASE_APP_ID="your-app-id"

# ===========================
# Firebase Admin (Server-side)
# ===========================
# Base64-encoded service account JSON
# To encode: cat service-account.json | base64
FIREBASE_SERVICE_ACCOUNT_BASE64="base64-encoded-service-account-json"

# ===========================
# Database Configuration
# ===========================
# PostgreSQL connection string
DATABASE_URL="postgresql://username:password@host:port/database?schema=public"

# For connection pooling (recommended for production)
# DATABASE_URL="postgresql://username:password@host:port/database?pgbouncer=true&connection_limit=1"

# ===========================
# Supabase (Optional)
# ===========================
NEXT_PUBLIC_SUPABASE_URL="https://your-project.supabase.co"
NEXT_PUBLIC_SUPABASE_ANON_KEY="your-anon-key"

# ===========================
# Security & Authentication
# ===========================
# Random string for webhook verification
WEBHOOK_SECRET="generate-random-32-char-string"

# JWT configuration
JWT_AUDIENCE="your-app-name"

# Session secret (generate a random string)
SESSION_SECRET="generate-random-64-char-string"

# ===========================
# Rate Limiting & Caching (Production)
# ===========================
# Redis/Upstash configuration
UPSTASH_REDIS_REST_URL="https://your-instance.upstash.io"
UPSTASH_REDIS_REST_TOKEN="your-token"

# ===========================
# Error Monitoring (Production)
# ===========================
SENTRY_DSN="https://your-key@sentry.io/your-project"
SENTRY_AUTH_TOKEN="your-auth-token"
SENTRY_ORG="your-org"
SENTRY_PROJECT="your-project"

# ===========================
# Analytics (Optional)
# ===========================
NEXT_PUBLIC_GA_MEASUREMENT_ID="G-XXXXXXXXXX"
NEXT_PUBLIC_POSTHOG_KEY="your-posthog-key"
NEXT_PUBLIC_POSTHOG_HOST="https://app.posthog.com"

# ===========================
# Email Service (Optional)
# ===========================
SMTP_HOST="smtp.example.com"
SMTP_PORT="587"
SMTP_USER="your-email@example.com"
SMTP_PASS="your-password"
SMTP_FROM="noreply@example.com"

# Or use a service like SendGrid/Resend
SENDGRID_API_KEY="your-api-key"
RESEND_API_KEY="your-api-key"

# ===========================
# File Storage (Production)
# ===========================
# AWS S3 or compatible
AWS_ACCESS_KEY_ID="your-access-key"
AWS_SECRET_ACCESS_KEY="your-secret-key"
AWS_REGION="us-east-1"
AWS_S3_BUCKET="your-bucket-name"

# ===========================
# Feature Flags
# ===========================
ENABLE_CONSOLE_LOGS=false
ENABLE_DEBUG_MODE=false
ENABLE_MAINTENANCE_MODE=false

# ===========================
# API Configuration
# ===========================
# API rate limits (requests per minute)
API_RATE_LIMIT_ADMIN=200
API_RATE_LIMIT_STAFF=150
API_RATE_LIMIT_CONTRACTOR=100
API_RATE_LIMIT_VIEWER=50

# Request timeout (milliseconds)
API_TIMEOUT=30000

# ===========================
# Deployment Configuration
# ===========================
# Vercel
VERCEL_URL="your-app.vercel.app"

# Or custom domain
NEXT_PUBLIC_APP_URL="https://your-domain.com"

# ===========================
# Development Tools
# ===========================
# Enable React Query devtools
NEXT_PUBLIC_ENABLE_DEVTOOLS=false

# Database Studio
DATABASE_STUDIO_PORT=5555

# ===========================
# IMPORTANT SECURITY NOTES
# ===========================
# 1. NEVER commit .env.local to version control
# 2. Use different values for development and production
# 3. Rotate secrets regularly
# 4. Use secret management services in production (AWS Secrets Manager, Vault, etc.)
# 5. Enable audit logging for all secret access
# 6. Use least privilege principle for all service accounts
# 7. Enable MFA for all admin accounts
# 8. Monitor for exposed secrets in your repository

# ===========================
# Generating Secure Random Strings
# ===========================
# Linux/Mac: openssl rand -hex 32
# Node.js: require('crypto').randomBytes(32).toString('hex')
# Online: https://generate-secret.vercel.app/32